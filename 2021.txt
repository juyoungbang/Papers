1. SILK: Preventing Latency Spikes in Log-Structured Merge Key-Value Stores (ATC '19)
Topic: I/O scheduler for LSM-KV
Main Idea: 1) Opportunistically allocating I/O bandwidth to internal operations.
           2) Prioritizing internal operations at the lower lavels of the three.
           3) Preempting compactions.

2. From WiscKey to Bourbon: A Learned Index for Log-Structured merge Trees (OSDI '20)
Topic: Applying the concept of learned index to LSM trees
Main Idea: 1) Using piecewise linear regression to find the position of a key.
           2) Learning in the granulaity of files.
           3) Waiting before learning a file.
           4) Using cost-benefit analyzer to determine whether to learn a file or not.

3. ElasticBF: Elastic Bloom Filter with Hotness Awawreness for Boosting Read Performance in Large Key-Value Stores (ATC '19)
Topic: Dynamically adjusting Bloom filters based on hotness information.
Main Idea: 1) Dynamically allocating Bloom filters based on data hotness.
           2) Inheriting the hotness information during compaction.
           3) Optimizing in-memory management to dynamically adjust Bloom filters with negligible CPU overhead.